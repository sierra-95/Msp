

Microchip Technology PIC LITE Macro Assembler V1.32 build 58300 
                                                                                               Wed Aug 05 18:58:26 2015

Microchip Technology Omniscient Code Generator (Lite mode) build 58300
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	inittext,global,class=CODE,delta=2
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	dabs	1,0x7E,2
    17  0000                     	;# 
    18  0001                     	;# 
    19  0002                     	;# 
    20  0003                     	;# 
    21  0004                     	;# 
    22  0005                     	;# 
    23  0006                     	;# 
    24  0007                     	;# 
    25  0008                     	;# 
    26  0009                     	;# 
    27  000A                     	;# 
    28  000B                     	;# 
    29  000C                     	;# 
    30  000D                     	;# 
    31  000E                     	;# 
    32  000E                     	;# 
    33  000F                     	;# 
    34  0010                     	;# 
    35  0011                     	;# 
    36  0012                     	;# 
    37  0013                     	;# 
    38  0014                     	;# 
    39  0015                     	;# 
    40  0015                     	;# 
    41  0016                     	;# 
    42  0017                     	;# 
    43  0018                     	;# 
    44  0019                     	;# 
    45  001A                     	;# 
    46  001B                     	;# 
    47  001B                     	;# 
    48  001C                     	;# 
    49  001D                     	;# 
    50  001E                     	;# 
    51  001F                     	;# 
    52  0081                     	;# 
    53  0085                     	;# 
    54  0086                     	;# 
    55  0087                     	;# 
    56  0088                     	;# 
    57  0089                     	;# 
    58  008C                     	;# 
    59  008D                     	;# 
    60  008E                     	;# 
    61  0091                     	;# 
    62  0092                     	;# 
    63  0093                     	;# 
    64  0094                     	;# 
    65  0098                     	;# 
    66  0099                     	;# 
    67  009C                     	;# 
    68  009D                     	;# 
    69  009E                     	;# 
    70  009F                     	;# 
    71  010C                     	;# 
    72  010D                     	;# 
    73  010E                     	;# 
    74  010F                     	;# 
    75  018C                     	;# 
    76  018D                     	;# 
    77                           
    78                           	psect	idataBANK0
    79  0629                     __pidataBANK0:	
    80                           
    81                           ;initializer for display_number@F1082
    82  0629  34C0               	retlw	192
    83  062A  34F9               	retlw	249
    84  062B  34A4               	retlw	164
    85  062C  34B0               	retlw	176
    86  062D  3499               	retlw	153
    87  062E  3492               	retlw	146
    88  062F  3482               	retlw	130
    89  0630  34F8               	retlw	248
    90  0631  3480               	retlw	128
    91  0632  3490               	retlw	144
    92  0006                     _PORTB	set	6
    93  0007                     _PORTC	set	7
    94  0086                     _TRISB	set	134
    95  0087                     _TRISC	set	135
    96                           
    97                           ; #config settings
    98  0000                     
    99                           	psect	cinit
   100  07F0                     start_initialization:	
   101  07F0                     __initialization:	
   102                           
   103                           ; Initialize objects allocated to BANK0
   104  07F0  1383               	bcf	3,7	;select IRP bank0
   105  07F1  303A               	movlw	low (__pdataBANK0+10)
   106  07F2  00FD               	movwf	btemp+-1
   107  07F3  3006               	movlw	high __pidataBANK0
   108  07F4  00FE               	movwf	btemp
   109  07F5  3029               	movlw	low __pidataBANK0
   110  07F6  00FF               	movwf	btemp+1
   111  07F7  3030               	movlw	low __pdataBANK0
   112  07F8  0084               	movwf	4
   113  07F9  120A  118A  2642   	fcall	init_ram0
   114  07FC                     end_of_initialization:	
   115                           ;End of C runtime variable initialization code
   116                           
   117  07FC                     __end_of__initialization:	
   118  07FC  0183               	clrf	3
   119  07FD  120A  118A  2E63   	ljmp	_main	;jump to C main() function
   120                           
   121                           	psect	dataBANK0
   122  0030                     __pdataBANK0:	
   123  0030                     display_number@F1082:	
   124  0030                     	ds	10
   125                           
   126                           	psect	inittext
   127  063E                     init_fetch0:	
   128                           ;	Called with low address in FSR and high address in W
   129                           
   130  063E  087E               	movf	126,w
   131  063F  008A               	movwf	10
   132  0640  087F               	movf	127,w
   133  0641  0082               	movwf	2
   134  0642                     init_ram0:	
   135                           ;Called with:
   136                           ;	high address of idata address in btemp 
   137                           ;	low address of idata address in btemp+1 
   138                           ;	low address of data in FSR
   139                           ;	high address + 1 of data in btemp-1
   140                           
   141  0642  263E  120A  118A   	fcall	init_fetch0
   142  0645  0080               	movwf	0
   143  0646  0A84               	incf	4,f
   144  0647  0804               	movf	4,w
   145  0648  067D               	xorwf	125,w
   146  0649  1903               	btfsc	3,2
   147  064A  3400               	retlw	0
   148  064B  0AFF               	incf	127,f
   149  064C  1903               	btfsc	3,2
   150  064D  0AFE               	incf	126,f
   151  064E  2E42               	goto	init_ram0
   152                           
   153                           	psect	cstackCOMMON
   154  0070                     __pcstackCOMMON:	
   155  0070                     ?_DELAY_us:	
   156  0070                     ?_main:	
   157                           ; 0 bytes @ 0x0
   158                           
   159  0070                     ?___lwdiv:	
   160                           ; 0 bytes @ 0x0
   161                           
   162  0070                     ?___lwmod:	
   163                           ; 2 bytes @ 0x0
   164                           
   165  0070                     DELAY_us@us_count:	
   166                           ; 2 bytes @ 0x0
   167                           
   168  0070                     ___lwdiv@divisor:	
   169                           ; 2 bytes @ 0x0
   170                           
   171  0070                     ___lwmod@divisor:	
   172                           ; 2 bytes @ 0x0
   173                           
   174                           
   175                           ; 2 bytes @ 0x0
   176  0070                     	ds	2
   177  0072                     ??_DELAY_us:	
   178  0072                     ?_DELAY_ms:	
   179                           ; 0 bytes @ 0x2
   180                           
   181  0072                     DELAY_ms@ms_count:	
   182                           ; 0 bytes @ 0x2
   183                           
   184  0072                     ___lwdiv@dividend:	
   185                           ; 2 bytes @ 0x2
   186                           
   187  0072                     ___lwmod@dividend:	
   188                           ; 2 bytes @ 0x2
   189                           
   190                           
   191                           ; 2 bytes @ 0x2
   192  0072                     	ds	2
   193  0074                     ??_DELAY_ms:	
   194  0074                     ??___lwdiv:	
   195                           ; 0 bytes @ 0x4
   196                           
   197  0074                     ??___lwmod:	
   198                           ; 0 bytes @ 0x4
   199                           
   200                           
   201                           ; 0 bytes @ 0x4
   202  0074                     	ds	1
   203  0075                     ___lwmod@counter:	
   204  0075                     ___lwdiv@quotient:	
   205                           ; 1 bytes @ 0x5
   206                           
   207                           
   208                           ; 2 bytes @ 0x5
   209  0075                     	ds	2
   210  0077                     ___lwdiv@counter:	
   211                           
   212                           ; 1 bytes @ 0x7
   213  0077                     	ds	1
   214  0078                     ?_display_number:	
   215  0078                     display_number@number:	
   216                           ; 0 bytes @ 0x8
   217                           
   218                           
   219                           ; 2 bytes @ 0x8
   220  0078                     	ds	2
   221  007A                     ??_display_number:	
   222                           
   223                           ; 0 bytes @ 0xA
   224  007A                     	ds	4
   225  007E                     ??_main:	
   226                           
   227                           	psect	cstackBANK0
   228  0020                     __pcstackBANK0:	
   229                           ; 0 bytes @ 0xE
   230                           
   231  0020                     display_number@seg_code:	
   232                           
   233                           ; 10 bytes @ 0x0
   234  0020                     	ds	10
   235  002A                     display_number@i:	
   236                           
   237                           ; 1 bytes @ 0xA
   238  002A                     	ds	1
   239  002B                     display_number@temp:	
   240                           
   241                           ; 1 bytes @ 0xB
   242  002B                     	ds	1
   243  002C                     display_number@num:	
   244                           
   245                           ; 2 bytes @ 0xC
   246  002C                     	ds	2
   247  002E                     main@cnt:	
   248                           
   249                           ; 2 bytes @ 0xE
   250  002E                     	ds	2
   251                           
   252                           	psect	maintext
   253  0663                     __pmaintext:	
   254 ;;
   255 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   256 ;;
   257 ;; *************** function _main *****************
   258 ;; Defined at:
   259 ;;		line 59 in file "main.c"
   260 ;; Parameters:    Size  Location     Type
   261 ;;		None
   262 ;; Auto vars:     Size  Location     Type
   263 ;;  cnt             2   14[BANK0 ] unsigned int 
   264 ;; Return value:  Size  Location     Type
   265 ;;		None               void
   266 ;; Registers used:
   267 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   268 ;; Tracked objects:
   269 ;;		On entry : 17F/0
   270 ;;		On exit  : 0/0
   271 ;;		Unchanged: 0/0
   272 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   273 ;;      Params:         0       0       0       0       0
   274 ;;      Locals:         0       2       0       0       0
   275 ;;      Temps:          0       0       0       0       0
   276 ;;      Totals:         0       2       0       0       0
   277 ;;Total ram usage:        2 bytes
   278 ;; Hardware stack levels required when called:    3
   279 ;; This function calls:
   280 ;;		_display_number
   281 ;; This function is called by:
   282 ;;		Startup code after reset
   283 ;; This function uses a non-reentrant model
   284 ;;
   285                           
   286                           
   287                           ;psect for function _main
   288  0663                     _main:	
   289                           
   290                           ;main.c: 62: unsigned int cnt=0;
   291                           
   292                           ;incstack = 0
   293                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   294  0663  1283               	bcf	3,5	;RP0=0, select bank0
   295  0664  1303               	bcf	3,6	;RP1=0, select bank0
   296  0665  01AE               	clrf	main@cnt
   297  0666  01AF               	clrf	main@cnt+1
   298                           
   299                           ;main.c: 64: TRISB = 0x00u;
   300  0667  1683               	bsf	3,5	;RP0=1, select bank1
   301  0668  1303               	bcf	3,6	;RP1=0, select bank1
   302  0669  0186               	clrf	6	;volatile
   303                           
   304                           ;main.c: 65: TRISC = 0x00u;
   305  066A  0187               	clrf	7	;volatile
   306  066B                     l38:	
   307                           ;main.c: 66: while(1)
   308                           
   309                           
   310                           ;main.c: 67: {
   311                           ;main.c: 69: for(cnt=0;cnt<=9999;cnt++)
   312  066B  1283               	bcf	3,5	;RP0=0, select bank0
   313  066C  01AE               	clrf	main@cnt
   314  066D  01AF               	clrf	main@cnt+1
   315  066E                     L1:	
   316  066E  3027               	movlw	39
   317  066F  022F               	subwf	main@cnt+1,w
   318  0670  3010               	movlw	16
   319  0671  1903               	skipnz
   320  0672  022E               	subwf	main@cnt,w
   321  0673  1803               	btfsc	3,0
   322  0674  2E6B               	goto	l38
   323                           
   324                           ;main.c: 70: {
   325                           ;main.c: 71: display_number(cnt);
   326  0675  082F               	movf	main@cnt+1,w
   327  0676  01F9               	clrf	display_number@number+1
   328  0677  07F9               	addwf	display_number@number+1,f
   329  0678  082E               	movf	main@cnt,w
   330  0679  01F8               	clrf	display_number@number
   331  067A  07F8               	addwf	display_number@number,f
   332  067B  120A  118A  26FB  120A  118A  	fcall	_display_number
   333  0680  3001               	movlw	1
   334  0681  1283               	bcf	3,5	;RP0=0, select bank0
   335  0682  1303               	bcf	3,6	;RP1=0, select bank0
   336  0683  07AE               	addwf	main@cnt,f
   337  0684  1803               	skipnc
   338  0685  0AAF               	incf	main@cnt+1,f
   339  0686  3000               	movlw	0
   340  0687  07AF               	addwf	main@cnt+1,f
   341  0688  2E6E               	goto	L1
   342  0689                     __end_of_main:	
   343                           
   344                           	psect	text1
   345  06FB                     __ptext1:	
   346 ;; *************** function _display_number *****************
   347 ;; Defined at:
   348 ;;		line 23 in file "main.c"
   349 ;; Parameters:    Size  Location     Type
   350 ;;  number          2    8[COMMON] unsigned int 
   351 ;; Auto vars:     Size  Location     Type
   352 ;;  seg_code       10    0[BANK0 ] unsigned char [10]
   353 ;;  num             2   12[BANK0 ] unsigned int 
   354 ;;  temp            1   11[BANK0 ] unsigned char 
   355 ;;  i               1   10[BANK0 ] unsigned char 
   356 ;; Return value:  Size  Location     Type
   357 ;;		None               void
   358 ;; Registers used:
   359 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   360 ;; Tracked objects:
   361 ;;		On entry : 0/0
   362 ;;		On exit  : 0/0
   363 ;;		Unchanged: 0/0
   364 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   365 ;;      Params:         2       0       0       0       0
   366 ;;      Locals:         0      14       0       0       0
   367 ;;      Temps:          4       0       0       0       0
   368 ;;      Totals:         6      14       0       0       0
   369 ;;Total ram usage:       20 bytes
   370 ;; Hardware stack levels used:    1
   371 ;; Hardware stack levels required when called:    2
   372 ;; This function calls:
   373 ;;		_DELAY_ms
   374 ;;		___lwdiv
   375 ;;		___lwmod
   376 ;; This function is called by:
   377 ;;		_main
   378 ;; This function uses a non-reentrant model
   379 ;;
   380                           
   381                           
   382                           ;psect for function _display_number
   383  06FB                     _display_number:	
   384                           
   385                           ;main.c: 25: unsigned char seg_code[]={0xC0,0xF9,0xA4,0xB0,0x99,0x92,0x82, 0xF8,0x80,0x9
      +                          0};
   386                           
   387                           ;incstack = 0
   388                           ; Regs used in _display_number: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   389  06FB  3020               	movlw	display_number@seg_code& (0+255)
   390  06FC  0084               	movwf	4
   391  06FD  3030               	movlw	low display_number@F1082
   392  06FE  00FA               	movwf	??_display_number
   393  06FF  0804               	movf	4,w
   394  0700  00FB               	movwf	??_display_number+1
   395  0701  300A               	movlw	10
   396  0702  00FC               	movwf	??_display_number+2
   397  0703                     u370:	
   398  0703  087A               	movf	??_display_number,w
   399  0704  0084               	movwf	4
   400  0705  1383               	bcf	3,7	;select IRP bank0
   401  0706  0800               	movf	0,w
   402  0707  00FD               	movwf	??_display_number+3
   403  0708  0AFA               	incf	??_display_number,f
   404  0709  087B               	movf	??_display_number+1,w
   405  070A  0084               	movwf	4
   406  070B  087D               	movf	??_display_number+3,w
   407  070C  0080               	movwf	0
   408  070D  0AFB               	incf	??_display_number+1,f
   409  070E  0BFC               	decfsz	??_display_number+2,f
   410  070F  2F03               	goto	u370
   411                           
   412                           ;main.c: 26: unsigned char temp,i;
   413                           ;main.c: 27: unsigned int num;
   414                           ;main.c: 31: for(i=0;i<200;i++)
   415  0710  1283               	bcf	3,5	;RP0=0, select bank0
   416  0711  1303               	bcf	3,6	;RP1=0, select bank0
   417  0712  01AA               	clrf	display_number@i
   418  0713                     L2:	
   419  0713  30C8               	movlw	200
   420  0714  022A               	subwf	display_number@i,w
   421  0715  1803               	btfsc	3,0
   422  0716  0008               	return
   423                           
   424                           ;main.c: 32: {
   425                           ;main.c: 33: num=number;
   426  0717  0879               	movf	display_number@number+1,w
   427  0718  01AD               	clrf	display_number@num+1
   428  0719  07AD               	addwf	display_number@num+1,f
   429  071A  0878               	movf	display_number@number,w
   430  071B  01AC               	clrf	display_number@num
   431  071C  07AC               	addwf	display_number@num,f
   432                           
   433                           ;main.c: 35: temp = num/1000;
   434  071D  30E8               	movlw	232
   435  071E  00F0               	movwf	___lwdiv@divisor
   436  071F  3003               	movlw	3
   437  0720  00F1               	movwf	___lwdiv@divisor+1
   438  0721  082D               	movf	display_number@num+1,w
   439  0722  01F3               	clrf	___lwdiv@dividend+1
   440  0723  07F3               	addwf	___lwdiv@dividend+1,f
   441  0724  082C               	movf	display_number@num,w
   442  0725  01F2               	clrf	___lwdiv@dividend
   443  0726  07F2               	addwf	___lwdiv@dividend,f
   444  0727  120A  118A  26BD  120A  118A  	fcall	___lwdiv
   445  072C  0870               	movf	?___lwdiv,w
   446  072D  00FA               	movwf	??_display_number
   447  072E  087A               	movf	??_display_number,w
   448  072F  1283               	bcf	3,5	;RP0=0, select bank0
   449  0730  1303               	bcf	3,6	;RP1=0, select bank0
   450  0731  00AB               	movwf	display_number@temp
   451                           
   452                           ;main.c: 36: num=num%1000;
   453  0732  30E8               	movlw	232
   454  0733  00F0               	movwf	___lwmod@divisor
   455  0734  3003               	movlw	3
   456  0735  00F1               	movwf	___lwmod@divisor+1
   457  0736  082D               	movf	display_number@num+1,w
   458  0737  01F3               	clrf	___lwmod@dividend+1
   459  0738  07F3               	addwf	___lwmod@dividend+1,f
   460  0739  082C               	movf	display_number@num,w
   461  073A  01F2               	clrf	___lwmod@dividend
   462  073B  07F2               	addwf	___lwmod@dividend,f
   463  073C  120A  118A  2689  120A  118A  	fcall	___lwmod
   464  0741  0871               	movf	?___lwmod+1,w
   465  0742  1283               	bcf	3,5	;RP0=0, select bank0
   466  0743  1303               	bcf	3,6	;RP1=0, select bank0
   467  0744  01AD               	clrf	display_number@num+1
   468  0745  07AD               	addwf	display_number@num+1,f
   469  0746  0870               	movf	?___lwmod,w
   470  0747  01AC               	clrf	display_number@num
   471  0748  07AC               	addwf	display_number@num,f
   472                           
   473                           ;main.c: 37: PORTC=0x01;
   474  0749  3001               	movlw	1
   475  074A  0087               	movwf	7	;volatile
   476                           
   477                           ;main.c: 38: PORTB = seg_code[temp];
   478  074B  082B               	movf	display_number@temp,w
   479  074C  3E20               	addlw	display_number@seg_code& (0+255)
   480  074D  0084               	movwf	4
   481  074E  1383               	bcf	3,7	;select IRP bank0
   482  074F  0800               	movf	0,w
   483  0750  0086               	movwf	6	;volatile
   484                           
   485                           ;main.c: 39: DELAY_ms(1);
   486  0751  3001               	movlw	1
   487  0752  00F2               	movwf	DELAY_ms@ms_count
   488  0753  3000               	movlw	0
   489  0754  00F3               	movwf	DELAY_ms@ms_count+1
   490  0755  120A  118A  264F  120A  118A  	fcall	_DELAY_ms
   491                           
   492                           ;main.c: 41: temp = num/100;
   493  075A  3064               	movlw	100
   494  075B  00F0               	movwf	___lwdiv@divisor
   495  075C  3000               	movlw	0
   496  075D  00F1               	movwf	___lwdiv@divisor+1
   497  075E  1283               	bcf	3,5	;RP0=0, select bank0
   498  075F  1303               	bcf	3,6	;RP1=0, select bank0
   499  0760  082D               	movf	display_number@num+1,w
   500  0761  01F3               	clrf	___lwdiv@dividend+1
   501  0762  07F3               	addwf	___lwdiv@dividend+1,f
   502  0763  082C               	movf	display_number@num,w
   503  0764  01F2               	clrf	___lwdiv@dividend
   504  0765  07F2               	addwf	___lwdiv@dividend,f
   505  0766  120A  118A  26BD  120A  118A  	fcall	___lwdiv
   506  076B  0870               	movf	?___lwdiv,w
   507  076C  00FA               	movwf	??_display_number
   508  076D  087A               	movf	??_display_number,w
   509  076E  1283               	bcf	3,5	;RP0=0, select bank0
   510  076F  1303               	bcf	3,6	;RP1=0, select bank0
   511  0770  00AB               	movwf	display_number@temp
   512                           
   513                           ;main.c: 42: num=num%100;
   514  0771  3064               	movlw	100
   515  0772  00F0               	movwf	___lwmod@divisor
   516  0773  3000               	movlw	0
   517  0774  00F1               	movwf	___lwmod@divisor+1
   518  0775  082D               	movf	display_number@num+1,w
   519  0776  01F3               	clrf	___lwmod@dividend+1
   520  0777  07F3               	addwf	___lwmod@dividend+1,f
   521  0778  082C               	movf	display_number@num,w
   522  0779  01F2               	clrf	___lwmod@dividend
   523  077A  07F2               	addwf	___lwmod@dividend,f
   524  077B  120A  118A  2689  120A  118A  	fcall	___lwmod
   525  0780  0871               	movf	?___lwmod+1,w
   526  0781  1283               	bcf	3,5	;RP0=0, select bank0
   527  0782  1303               	bcf	3,6	;RP1=0, select bank0
   528  0783  01AD               	clrf	display_number@num+1
   529  0784  07AD               	addwf	display_number@num+1,f
   530  0785  0870               	movf	?___lwmod,w
   531  0786  01AC               	clrf	display_number@num
   532  0787  07AC               	addwf	display_number@num,f
   533                           
   534                           ;main.c: 43: PORTC=0x02;
   535  0788  3002               	movlw	2
   536  0789  0087               	movwf	7	;volatile
   537                           
   538                           ;main.c: 44: PORTB = seg_code[temp];
   539  078A  082B               	movf	display_number@temp,w
   540  078B  3E20               	addlw	display_number@seg_code& (0+255)
   541  078C  0084               	movwf	4
   542  078D  1383               	bcf	3,7	;select IRP bank0
   543  078E  0800               	movf	0,w
   544  078F  0086               	movwf	6	;volatile
   545                           
   546                           ;main.c: 45: DELAY_ms(1);
   547  0790  3001               	movlw	1
   548  0791  00F2               	movwf	DELAY_ms@ms_count
   549  0792  3000               	movlw	0
   550  0793  00F3               	movwf	DELAY_ms@ms_count+1
   551  0794  120A  118A  264F  120A  118A  	fcall	_DELAY_ms
   552                           
   553                           ;main.c: 47: temp = num/10;
   554  0799  300A               	movlw	10
   555  079A  00F0               	movwf	___lwdiv@divisor
   556  079B  3000               	movlw	0
   557  079C  00F1               	movwf	___lwdiv@divisor+1
   558  079D  1283               	bcf	3,5	;RP0=0, select bank0
   559  079E  1303               	bcf	3,6	;RP1=0, select bank0
   560  079F  082D               	movf	display_number@num+1,w
   561  07A0  01F3               	clrf	___lwdiv@dividend+1
   562  07A1  07F3               	addwf	___lwdiv@dividend+1,f
   563  07A2  082C               	movf	display_number@num,w
   564  07A3  01F2               	clrf	___lwdiv@dividend
   565  07A4  07F2               	addwf	___lwdiv@dividend,f
   566  07A5  120A  118A  26BD  120A  118A  	fcall	___lwdiv
   567  07AA  0870               	movf	?___lwdiv,w
   568  07AB  00FA               	movwf	??_display_number
   569  07AC  087A               	movf	??_display_number,w
   570  07AD  1283               	bcf	3,5	;RP0=0, select bank0
   571  07AE  1303               	bcf	3,6	;RP1=0, select bank0
   572  07AF  00AB               	movwf	display_number@temp
   573                           
   574                           ;main.c: 48: PORTC=0x04;
   575  07B0  3004               	movlw	4
   576  07B1  0087               	movwf	7	;volatile
   577                           
   578                           ;main.c: 49: PORTB = seg_code[temp];
   579  07B2  082B               	movf	display_number@temp,w
   580  07B3  3E20               	addlw	display_number@seg_code& (0+255)
   581  07B4  0084               	movwf	4
   582  07B5  1383               	bcf	3,7	;select IRP bank0
   583  07B6  0800               	movf	0,w
   584  07B7  0086               	movwf	6	;volatile
   585                           
   586                           ;main.c: 50: DELAY_ms(1);
   587  07B8  3001               	movlw	1
   588  07B9  00F2               	movwf	DELAY_ms@ms_count
   589  07BA  3000               	movlw	0
   590  07BB  00F3               	movwf	DELAY_ms@ms_count+1
   591  07BC  120A  118A  264F  120A  118A  	fcall	_DELAY_ms
   592                           
   593                           ;main.c: 52: temp = num%10;
   594  07C1  300A               	movlw	10
   595  07C2  00F0               	movwf	___lwmod@divisor
   596  07C3  3000               	movlw	0
   597  07C4  00F1               	movwf	___lwmod@divisor+1
   598  07C5  1283               	bcf	3,5	;RP0=0, select bank0
   599  07C6  1303               	bcf	3,6	;RP1=0, select bank0
   600  07C7  082D               	movf	display_number@num+1,w
   601  07C8  01F3               	clrf	___lwmod@dividend+1
   602  07C9  07F3               	addwf	___lwmod@dividend+1,f
   603  07CA  082C               	movf	display_number@num,w
   604  07CB  01F2               	clrf	___lwmod@dividend
   605  07CC  07F2               	addwf	___lwmod@dividend,f
   606  07CD  120A  118A  2689  120A  118A  	fcall	___lwmod
   607  07D2  0870               	movf	?___lwmod,w
   608  07D3  00FA               	movwf	??_display_number
   609  07D4  087A               	movf	??_display_number,w
   610  07D5  1283               	bcf	3,5	;RP0=0, select bank0
   611  07D6  1303               	bcf	3,6	;RP1=0, select bank0
   612  07D7  00AB               	movwf	display_number@temp
   613                           
   614                           ;main.c: 53: PORTC=0x08;
   615  07D8  3008               	movlw	8
   616  07D9  0087               	movwf	7	;volatile
   617                           
   618                           ;main.c: 54: PORTB = seg_code[temp];
   619  07DA  082B               	movf	display_number@temp,w
   620  07DB  3E20               	addlw	display_number@seg_code& (0+255)
   621  07DC  0084               	movwf	4
   622  07DD  1383               	bcf	3,7	;select IRP bank0
   623  07DE  0800               	movf	0,w
   624  07DF  0086               	movwf	6	;volatile
   625                           
   626                           ;main.c: 55: DELAY_ms(1);
   627  07E0  3001               	movlw	1
   628  07E1  00F2               	movwf	DELAY_ms@ms_count
   629  07E2  3000               	movlw	0
   630  07E3  00F3               	movwf	DELAY_ms@ms_count+1
   631  07E4  120A  118A  264F  120A  118A  	fcall	_DELAY_ms
   632  07E9  3001               	movlw	1
   633  07EA  00FA               	movwf	??_display_number
   634  07EB  087A               	movf	??_display_number,w
   635  07EC  1283               	bcf	3,5	;RP0=0, select bank0
   636  07ED  1303               	bcf	3,6	;RP1=0, select bank0
   637  07EE  07AA               	addwf	display_number@i,f
   638  07EF  2F13               	goto	L2
   639  07F0                     __end_of_display_number:	
   640                           
   641                           	psect	text2
   642  0689                     __ptext2:	
   643 ;; *************** function ___lwmod *****************
   644 ;; Defined at:
   645 ;;		line 6 in file "C:\Program Files\Microchip\xc8\v1.32\sources\common\lwmod.c"
   646 ;; Parameters:    Size  Location     Type
   647 ;;  divisor         2    0[COMMON] unsigned int 
   648 ;;  dividend        2    2[COMMON] unsigned int 
   649 ;; Auto vars:     Size  Location     Type
   650 ;;  counter         1    5[COMMON] unsigned char 
   651 ;; Return value:  Size  Location     Type
   652 ;;                  2    0[COMMON] unsigned int 
   653 ;; Registers used:
   654 ;;		wreg, status,2, status,0
   655 ;; Tracked objects:
   656 ;;		On entry : 0/0
   657 ;;		On exit  : 0/0
   658 ;;		Unchanged: 0/0
   659 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   660 ;;      Params:         4       0       0       0       0
   661 ;;      Locals:         1       0       0       0       0
   662 ;;      Temps:          1       0       0       0       0
   663 ;;      Totals:         6       0       0       0       0
   664 ;;Total ram usage:        6 bytes
   665 ;; Hardware stack levels used:    1
   666 ;; This function calls:
   667 ;;		Nothing
   668 ;; This function is called by:
   669 ;;		_display_number
   670 ;; This function uses a non-reentrant model
   671 ;;
   672                           
   673                           
   674                           ;psect for function ___lwmod
   675  0689                     ___lwmod:	
   676                           
   677                           ;incstack = 0
   678                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
   679  0689  0871               	movf	___lwmod@divisor+1,w
   680  068A  0470               	iorwf	___lwmod@divisor,w
   681  068B  1903               	skipnz
   682  068C  2EB6               	goto	l688
   683  068D  01F5               	clrf	___lwmod@counter
   684  068E  0AF5               	incf	___lwmod@counter,f
   685  068F                     l678:	
   686  068F  1BF1               	btfsc	___lwmod@divisor+1,7
   687  0690  2E9D               	goto	l680
   688  0691  3001               	movlw	1
   689  0692                     u325:	
   690  0692  1003               	clrc
   691  0693  0DF0               	rlf	___lwmod@divisor,f
   692  0694  0DF1               	rlf	___lwmod@divisor+1,f
   693  0695  3EFF               	addlw	-1
   694  0696  1D03               	skipz
   695  0697  2E92               	goto	u325
   696  0698  3001               	movlw	1
   697  0699  00F4               	movwf	??___lwmod
   698  069A  0874               	movf	??___lwmod,w
   699  069B  07F5               	addwf	___lwmod@counter,f
   700  069C  2E8F               	goto	l678
   701  069D                     l680:	
   702  069D  0871               	movf	___lwmod@divisor+1,w
   703  069E  0273               	subwf	___lwmod@dividend+1,w
   704  069F  1D03               	skipz
   705  06A0  2EA3               	goto	u345
   706  06A1  0870               	movf	___lwmod@divisor,w
   707  06A2  0272               	subwf	___lwmod@dividend,w
   708  06A3                     u345:	
   709  06A3  1C03               	skipc
   710  06A4  2EAB               	goto	l684
   711  06A5  0870               	movf	___lwmod@divisor,w
   712  06A6  02F2               	subwf	___lwmod@dividend,f
   713  06A7  0871               	movf	___lwmod@divisor+1,w
   714  06A8  1C03               	skipc
   715  06A9  03F3               	decf	___lwmod@dividend+1,f
   716  06AA  02F3               	subwf	___lwmod@dividend+1,f
   717  06AB                     l684:	
   718  06AB  3001               	movlw	1
   719  06AC                     u355:	
   720  06AC  1003               	clrc
   721  06AD  0CF1               	rrf	___lwmod@divisor+1,f
   722  06AE  0CF0               	rrf	___lwmod@divisor,f
   723  06AF  3EFF               	addlw	-1
   724  06B0  1D03               	skipz
   725  06B1  2EAC               	goto	u355
   726  06B2  3001               	movlw	1
   727  06B3  02F5               	subwf	___lwmod@counter,f
   728  06B4  1D03               	btfss	3,2
   729  06B5  2E9D               	goto	l680
   730  06B6                     l688:	
   731  06B6  0873               	movf	___lwmod@dividend+1,w
   732  06B7  01F1               	clrf	?___lwmod+1
   733  06B8  07F1               	addwf	?___lwmod+1,f
   734  06B9  0872               	movf	___lwmod@dividend,w
   735  06BA  01F0               	clrf	?___lwmod
   736  06BB  07F0               	addwf	?___lwmod,f
   737  06BC  0008               	return
   738  06BD                     __end_of___lwmod:	
   739                           
   740                           	psect	text3
   741  06BD                     __ptext3:	
   742 ;; *************** function ___lwdiv *****************
   743 ;; Defined at:
   744 ;;		line 6 in file "C:\Program Files\Microchip\xc8\v1.32\sources\common\lwdiv.c"
   745 ;; Parameters:    Size  Location     Type
   746 ;;  divisor         2    0[COMMON] unsigned int 
   747 ;;  dividend        2    2[COMMON] unsigned int 
   748 ;; Auto vars:     Size  Location     Type
   749 ;;  quotient        2    5[COMMON] unsigned int 
   750 ;;  counter         1    7[COMMON] unsigned char 
   751 ;; Return value:  Size  Location     Type
   752 ;;                  2    0[COMMON] unsigned int 
   753 ;; Registers used:
   754 ;;		wreg, status,2, status,0
   755 ;; Tracked objects:
   756 ;;		On entry : 0/0
   757 ;;		On exit  : 0/0
   758 ;;		Unchanged: 0/0
   759 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   760 ;;      Params:         4       0       0       0       0
   761 ;;      Locals:         3       0       0       0       0
   762 ;;      Temps:          1       0       0       0       0
   763 ;;      Totals:         8       0       0       0       0
   764 ;;Total ram usage:        8 bytes
   765 ;; Hardware stack levels used:    1
   766 ;; This function calls:
   767 ;;		Nothing
   768 ;; This function is called by:
   769 ;;		_display_number
   770 ;; This function uses a non-reentrant model
   771 ;;
   772                           
   773                           
   774                           ;psect for function ___lwdiv
   775  06BD                     ___lwdiv:	
   776                           
   777                           ;incstack = 0
   778                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
   779  06BD  01F5               	clrf	___lwdiv@quotient
   780  06BE  01F6               	clrf	___lwdiv@quotient+1
   781  06BF  0871               	movf	___lwdiv@divisor+1,w
   782  06C0  0470               	iorwf	___lwdiv@divisor,w
   783  06C1  1903               	skipnz
   784  06C2  2EF4               	goto	l666
   785  06C3  01F7               	clrf	___lwdiv@counter
   786  06C4  0AF7               	incf	___lwdiv@counter,f
   787  06C5                     l654:	
   788  06C5  1BF1               	btfsc	___lwdiv@divisor+1,7
   789  06C6  2ED3               	goto	l656
   790  06C7  3001               	movlw	1
   791  06C8                     u255:	
   792  06C8  1003               	clrc
   793  06C9  0DF0               	rlf	___lwdiv@divisor,f
   794  06CA  0DF1               	rlf	___lwdiv@divisor+1,f
   795  06CB  3EFF               	addlw	-1
   796  06CC  1D03               	skipz
   797  06CD  2EC8               	goto	u255
   798  06CE  3001               	movlw	1
   799  06CF  00F4               	movwf	??___lwdiv
   800  06D0  0874               	movf	??___lwdiv,w
   801  06D1  07F7               	addwf	___lwdiv@counter,f
   802  06D2  2EC5               	goto	l654
   803  06D3                     l656:	
   804  06D3  3001               	movlw	1
   805  06D4                     u275:	
   806  06D4  1003               	clrc
   807  06D5  0DF5               	rlf	___lwdiv@quotient,f
   808  06D6  0DF6               	rlf	___lwdiv@quotient+1,f
   809  06D7  3EFF               	addlw	-1
   810  06D8  1D03               	skipz
   811  06D9  2ED4               	goto	u275
   812  06DA  0871               	movf	___lwdiv@divisor+1,w
   813  06DB  0273               	subwf	___lwdiv@dividend+1,w
   814  06DC  1D03               	skipz
   815  06DD  2EE0               	goto	u285
   816  06DE  0870               	movf	___lwdiv@divisor,w
   817  06DF  0272               	subwf	___lwdiv@dividend,w
   818  06E0                     u285:	
   819  06E0  1C03               	skipc
   820  06E1  2EE9               	goto	l662
   821  06E2  0870               	movf	___lwdiv@divisor,w
   822  06E3  02F2               	subwf	___lwdiv@dividend,f
   823  06E4  0871               	movf	___lwdiv@divisor+1,w
   824  06E5  1C03               	skipc
   825  06E6  03F3               	decf	___lwdiv@dividend+1,f
   826  06E7  02F3               	subwf	___lwdiv@dividend+1,f
   827  06E8  1475               	bsf	___lwdiv@quotient,0
   828  06E9                     l662:	
   829  06E9  3001               	movlw	1
   830  06EA                     u295:	
   831  06EA  1003               	clrc
   832  06EB  0CF1               	rrf	___lwdiv@divisor+1,f
   833  06EC  0CF0               	rrf	___lwdiv@divisor,f
   834  06ED  3EFF               	addlw	-1
   835  06EE  1D03               	skipz
   836  06EF  2EEA               	goto	u295
   837  06F0  3001               	movlw	1
   838  06F1  02F7               	subwf	___lwdiv@counter,f
   839  06F2  1D03               	btfss	3,2
   840  06F3  2ED3               	goto	l656
   841  06F4                     l666:	
   842  06F4  0876               	movf	___lwdiv@quotient+1,w
   843  06F5  01F1               	clrf	?___lwdiv+1
   844  06F6  07F1               	addwf	?___lwdiv+1,f
   845  06F7  0875               	movf	___lwdiv@quotient,w
   846  06F8  01F0               	clrf	?___lwdiv
   847  06F9  07F0               	addwf	?___lwdiv,f
   848  06FA  0008               	return
   849  06FB                     __end_of___lwdiv:	
   850                           
   851                           	psect	text4
   852  064F                     __ptext4:	
   853 ;; *************** function _DELAY_ms *****************
   854 ;; Defined at:
   855 ;;		line 76 in file "delay.c"
   856 ;; Parameters:    Size  Location     Type
   857 ;;  ms_count        2    2[COMMON] unsigned int 
   858 ;; Auto vars:     Size  Location     Type
   859 ;;		None
   860 ;; Return value:  Size  Location     Type
   861 ;;		None               void
   862 ;; Registers used:
   863 ;;		wreg, status,2, status,0, pclath, cstack
   864 ;; Tracked objects:
   865 ;;		On entry : 0/0
   866 ;;		On exit  : 0/0
   867 ;;		Unchanged: 0/0
   868 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   869 ;;      Params:         2       0       0       0       0
   870 ;;      Locals:         0       0       0       0       0
   871 ;;      Temps:          0       0       0       0       0
   872 ;;      Totals:         2       0       0       0       0
   873 ;;Total ram usage:        2 bytes
   874 ;; Hardware stack levels used:    1
   875 ;; Hardware stack levels required when called:    1
   876 ;; This function calls:
   877 ;;		_DELAY_us
   878 ;; This function is called by:
   879 ;;		_display_number
   880 ;;		_DELAY_sec
   881 ;; This function uses a non-reentrant model
   882 ;;
   883                           
   884                           
   885                           ;psect for function _DELAY_ms
   886  064F                     _DELAY_ms:	
   887  064F                     l642:	
   888                           ;delay.c: 78: while(ms_count!=0)
   889                           
   890                           ;incstack = 0
   891                           ; Regs used in _DELAY_ms: [wreg+status,2+status,0+pclath+cstack]
   892                           
   893  064F  0873               	movf	DELAY_ms@ms_count+1,w
   894  0650  0472               	iorwf	DELAY_ms@ms_count,w
   895  0651  1903               	btfsc	3,2
   896  0652  0008               	return
   897                           
   898                           ;delay.c: 79: {
   899                           ;delay.c: 80: DELAY_us(300u);
   900  0653  302C               	movlw	44
   901  0654  00F0               	movwf	DELAY_us@us_count
   902  0655  3001               	movlw	1
   903  0656  00F1               	movwf	DELAY_us@us_count+1
   904  0657  120A  118A  2633  120A  118A  	fcall	_DELAY_us
   905                           
   906                           ;delay.c: 81: ms_count--;
   907  065C  3001               	movlw	1
   908  065D  02F2               	subwf	DELAY_ms@ms_count,f
   909  065E  3000               	movlw	0
   910  065F  1C03               	skipc
   911  0660  03F3               	decf	DELAY_ms@ms_count+1,f
   912  0661  02F3               	subwf	DELAY_ms@ms_count+1,f
   913  0662  2E4F               	goto	l642
   914  0663                     __end_of_DELAY_ms:	
   915                           
   916                           	psect	text5
   917  0633                     __ptext5:	
   918 ;; *************** function _DELAY_us *****************
   919 ;; Defined at:
   920 ;;		line 55 in file "delay.c"
   921 ;; Parameters:    Size  Location     Type
   922 ;;  us_count        2    0[COMMON] unsigned int 
   923 ;; Auto vars:     Size  Location     Type
   924 ;;		None
   925 ;; Return value:  Size  Location     Type
   926 ;;		None               void
   927 ;; Registers used:
   928 ;;		wreg, status,2, status,0
   929 ;; Tracked objects:
   930 ;;		On entry : 0/0
   931 ;;		On exit  : 0/0
   932 ;;		Unchanged: 0/0
   933 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   934 ;;      Params:         2       0       0       0       0
   935 ;;      Locals:         0       0       0       0       0
   936 ;;      Temps:          0       0       0       0       0
   937 ;;      Totals:         2       0       0       0       0
   938 ;;Total ram usage:        2 bytes
   939 ;; Hardware stack levels used:    1
   940 ;; This function calls:
   941 ;;		Nothing
   942 ;; This function is called by:
   943 ;;		_DELAY_ms
   944 ;; This function uses a non-reentrant model
   945 ;;
   946                           
   947                           
   948                           ;psect for function _DELAY_us
   949  0633                     _DELAY_us:	
   950  0633                     l634:	
   951                           ;delay.c: 57: while(us_count!=0)
   952                           
   953                           ;incstack = 0
   954                           ; Regs used in _DELAY_us: [wreg+status,2+status,0]
   955                           
   956  0633  0871               	movf	DELAY_us@us_count+1,w
   957  0634  0470               	iorwf	DELAY_us@us_count,w
   958  0635  1903               	btfsc	3,2
   959  0636  0008               	return
   960                           
   961                           ;delay.c: 58: {
   962                           ;delay.c: 59: us_count--;
   963  0637  3001               	movlw	1
   964  0638  02F0               	subwf	DELAY_us@us_count,f
   965  0639  3000               	movlw	0
   966  063A  1C03               	skipc
   967  063B  03F1               	decf	DELAY_us@us_count+1,f
   968  063C  02F1               	subwf	DELAY_us@us_count+1,f
   969  063D  2E33               	goto	l634
   970  063E                     __end_of_DELAY_us:	
   971  007E                     btemp	set	126	;btemp
   972  007E                     wtemp	set	126
   973  007E                     wtemp0	set	126
   974  0080                     wtemp1	set	128
   975  0082                     wtemp2	set	130
   976  0084                     wtemp3	set	132
   977  0086                     wtemp4	set	134
   978  0088                     wtemp5	set	136
   979  007F                     wtemp6	set	127
   980  007E                     ttemp	set	126
   981  007E                     ttemp0	set	126
   982  0081                     ttemp1	set	129
   983  0084                     ttemp2	set	132
   984  0087                     ttemp3	set	135
   985  007F                     ttemp4	set	127
   986  007E                     ltemp	set	126
   987  007E                     ltemp0	set	126
   988  0082                     ltemp1	set	130
   989  0086                     ltemp2	set	134
   990  0080                     ltemp3	set	128


Data Sizes:
    Strings     0
    Constant    0
    Data        10
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     16      26
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_display_number
    _display_number->___lwdiv
    _DELAY_ms->_DELAY_us

Critical Paths under _main in BANK0

    _main->_display_number

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    1831
                                             14 BANK0      2     2      0
                     _display_number
 ---------------------------------------------------------------------------------
 (1) _display_number                                      20    18      2    1762
                                              8 COMMON     6     4      2
                                              0 BANK0     14    14      0
                           _DELAY_ms
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     477
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     480
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (2) _DELAY_ms                                             2     0      2     364
                                              2 COMMON     2     0      2
                           _DELAY_us
 ---------------------------------------------------------------------------------
 (3) _DELAY_us                                             2     0      2      76
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _display_number
     _DELAY_ms
       _DELAY_us
     ___lwdiv
     ___lwmod

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     10      1A       5       32.5%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      28      12        0.0%
ABS                  0      0      28       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V1.32 build 58300 
Symbol Table                                                                                   Wed Aug 05 18:58:26 2015

                      pc 0002              __CFG_CP$OFF 0000                       l38 066B  
                     fsr 0004              __CFG_LVP$ON 0000                      l634 0633  
                    l642 064F                      l662 06E9                      l654 06C5  
                    l656 06D3                      l680 069D                      l666 06F4  
                    l684 06AB                      l678 068F                      l688 06B6  
                    u325 0692                      u255 06C8                      u345 06A3  
                    u370 0703             __CFG_CPD$OFF 0000                      u275 06D4  
                    u355 06AC                      u285 06E0                      u295 06EA  
                    fsr0 0004   __end_of_display_number 07F0                      indf 0000  
           __CFG_FOSC$HS 0000             __CFG_WRT$OFF 0000                     _main 0663  
                   btemp 007E                     ltemp 007E                     start 0000  
                   ttemp 007E                     wtemp 007E         __end_of_DELAY_ms 0663  
       __end_of_DELAY_us 063E                    ?_main 0070            __CFG_WDTE$OFF 0000  
        __end_of___lwdiv 06FB          __end_of___lwmod 06BD                    _PORTB 0006  
                  _PORTC 0007                    _TRISB 0086                    _TRISC 0087  
        ?_display_number 0078           __CFG_BOREN$OFF 0000                    pclath 000A  
                  ltemp0 007E                    ltemp1 0082                    ltemp2 0086  
                  ltemp3 0080                    ttemp0 007E                    ttemp1 0081  
                  ttemp2 0084                    ttemp3 0087                    ttemp4 007F  
                  status 0003                    wtemp0 007E                    wtemp1 0080  
                  wtemp2 0082                    wtemp3 0084                    wtemp4 0086  
                  wtemp5 0088                    wtemp6 007F          __initialization 07F0  
           __end_of_main 0689                   ??_main 007E           __CFG_PWRTE$OFF 0000  
 display_number@seg_code 0020                ??___lwdiv 0074                ??___lwmod 0074  
       DELAY_ms@ms_count 0072                ?_DELAY_ms 0072                ?_DELAY_us 0070  
    display_number@F1082 0030  __end_of__initialization 07FC           __pcstackCOMMON 0070  
           __pidataBANK0 0629               ??_DELAY_ms 0074               ??_DELAY_us 0072  
             __pmaintext 0663         ??_display_number 007A         DELAY_us@us_count 0070  
                ___lwdiv 06BD                  ___lwmod 0689                  __ptext1 06FB  
                __ptext2 0689                  __ptext3 06BD                  __ptext4 064F  
                __ptext5 0633                  main@cnt 002E     end_of_initialization 07FC  
      __size_of_DELAY_ms 0014        __size_of_DELAY_us 000B     display_number@number 0078  
    start_initialization 07F0               init_fetch0 063E              __pdataBANK0 0030  
              ___latbits 0002            __pcstackBANK0 0020       display_number@temp 002B  
       ___lwdiv@dividend 0072                 ?___lwdiv 0070                 ?___lwmod 0070  
               _DELAY_ms 064F                 _DELAY_us 0633         ___lwdiv@quotient 0075  
__size_of_display_number 00F5         __size_of___lwdiv 003E         __size_of___lwmod 0034  
      display_number@num 002C          ___lwdiv@divisor 0070          ___lwdiv@counter 0077  
          __size_of_main 0026                 init_ram0 0642         ___lwmod@dividend 0072  
        display_number@i 002A          ___lwmod@divisor 0070          ___lwmod@counter 0075  
         _display_number 06FB  
